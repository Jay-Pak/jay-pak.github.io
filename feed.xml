<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>To Be Continue.....</title>
    <description>My Study Space....</description>
    <link>https://jay-pak.github.io//</link>
    <atom:link href="https://jay-pak.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 18 Sep 2018 18:28:21 +0900</pubDate>
    <lastBuildDate>Tue, 18 Sep 2018 18:28:21 +0900</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Google Cloud Platform 가입하기</title>
        <description>&lt;p&gt;Google Cloud의 Service를 이용하기 위해서는 &lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;Google Cloud Platform Console&lt;/a&gt;에 접속하여 사용 하면 되는데, Console에 접속 하기 위해서는 Google Cloud Platform에 가입절차를 거쳐야 한다. 가입을 위해서는 Gmail계정이나 Google의 Business &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A1%9C%EC%84%9C%EC%9D%98_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&quot;&gt;SaaS(Service as a Service)&lt;/a&gt; Service인 G Suite서비스를 이용중 인 Mail계정이 필요하다. 이와는 별도로 계정에 연결할 신용카드가 필요한데, 해외 결제 가능 카드(VISA, Master, Union Pay etc..)면 사용 가능하다.&lt;/p&gt;

&lt;p&gt;Google은 가입하는 순간 300$의 무료 Credit을 12개월 동안 사용 가능 하도록 제공한다. 그리고, 300$의 Credit을 전부 사용 했거나, 12개월의 기간이 끝난다 하더라도 자동으로 과금이 되지 않고, 가입한 계정의 업그레이드를 해야지만 과금이 시작되므로, 잠시 Test를 위해 계정을 만들어서 신용카드를 연결 한다고 해서 사용료를 지불할 걱정은 하지 않아도 된다.&lt;/p&gt;

&lt;h2 id=&quot;google-cloud-platform-가입하기&quot;&gt;Google Cloud Platform 가입하기&lt;/h2&gt;

&lt;p&gt;우선 가입하기 위해 위에 언급 했던 Google Cloud Platform Console(Https://console.cloud.google.com)로 접속 한다.&lt;/p&gt;

&lt;p&gt;Google Cloud Platform에 처음 접속하게 되면 아래와 같은 Login 화면이 나오게 된다. 이때, Gmail계정이나, G Suite으로 생성된 Mail계정을 입력 하도록 한다. 지금 입력 계정은 회사에서 Demo로 사용중인 G suite 계정이다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/login1.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 1 - Google Cloud Platform Login]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Login에 성공하게 되면 아래와 같이 Welcome 화면이 나오며, Product에 대한 Update소식이나 Marketing에 대해 Mail로 받는 것에 동의여부를 묻는 화면이 나오는데 Marketing은 동의 하지 않아도 되지만 아래는 서비스 사용에 대한 동의를 묻는 것이기 때문에 동의를 하도록 한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/login2.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 2 - Google Cloud Platform Login]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;위 절차를 끝내게 되면 아래와 같이 화면이 나오는데 이는 가입은 되었지만, Google Cloud Platform의 사용을 위한 활성화가 되지 않은 상태이다. 활성화를 위해 맨 위 오른쪽의 &lt;code class=&quot;highlighter-rouge&quot;&gt;활성화&lt;/code&gt; 버튼이나, 아래 빨간 박스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;무료로 사용해 보기&lt;/code&gt;버튼을 클릭한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/login3.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 3 - Google Cloud Platform 가입되었으나 활성화 되지 않은 상태]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;이제 활성화를 위해 아래 화면과 같이 동의 화면이 나오는데 앞서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Fig 2&lt;/code&gt;에 한 것 과 같이 설정하고 맨 아래 &lt;code class=&quot;highlighter-rouge&quot;&gt;동의 및 계속하기&lt;/code&gt;를 클릭한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/join-in-1.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 4 - 활성화 단계 - 동의]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;동의 화면 이후 개인 정보와 결제 정보를 입력 한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/join-in-2.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 5 - 활성화 단계 - 사용자 정보 및 결제정보 1]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-join-in/join-in-3.png&quot; /&gt;
    &lt;br /&gt;
    &lt;em&gt;[Fig. 6 - 활성화 단계 - 사용자 정보 및 결제정보 2]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;위에서 말했다 시피 결제 정보를 입력 했다 하더라도, 무료계정에서 업그래이드를 하지 않는 이상 결제가 되지 않는다. 다만, 카드의 유효성을 검사 하기 위해 1$ 결제되고 난후, 결제 취소가 될 수 있다.&lt;/p&gt;

&lt;p&gt;이번 Post에서는 Google Cloud를 이용하기 위한 가입 절차를 살펴 보았다. 다음은 Google Cloud를 이용하기 위한 Google Cloud SDK를 설치 하는 방법에 대해 알아보도록 하겠다.&lt;/p&gt;

</description>
        <pubDate>Tue, 18 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Google-Cloud-Plarform-Join</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Google-Cloud-Plarform-Join</guid>
        
        <category>getting-started</category>
        
        
      </item>
    
      <item>
        <title>Google Cloud Compute Engine (2) - Compute Engine Instance 생성</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-Compute-Engine-Usage-1/&quot;&gt;Google Cloud Compute Engine (1) - Project 생성하기&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-Compute-Engine-Usage-2/&quot;&gt;Google Cloud Compute Engine (2) - Compute Engine Instance 생성&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이번 Post에서는 Google Cloud의 자원 중 Compute Engine을 사용하는 방법에 대해 알아 보도록 하겠다. &lt;a href=&quot;https://cloud.google.com/compute/&quot;&gt;Google Cloud Compute Engine(GCE)&lt;/a&gt;은 Google Cloud 내에 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B0%80%EC%83%81_%EB%A8%B8%EC%8B%A0#%EA%B0%80%EC%83%81_%EB%A8%B8%EC%8B%A0_%EC%9D%91%EC%9A%A9_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&quot;&gt;가상 머신(Virtual Machine=VM)&lt;/a&gt;으로 Google Cloud의 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A1%9C%EC%84%9C%EC%9D%98_%EC%9D%B8%ED%94%84%EB%9D%BC%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B2%98&quot;&gt;IaaS(Infrastructure as a Service)&lt;/a&gt;이다. Compute Engine을 이용하면, Google의 Peta byte급의 Network 및 Persistant Disk 등의 자원을 저렴하게 이용할 수 있고, 높은 수준의 &lt;a href=&quot;https://cloud.google.com/compute/sla&quot;&gt;SLA(Service Level Agreement)&lt;/a&gt;를 보장한다.&lt;/p&gt;

&lt;p&gt;Google Cloud의 Compute Engine Instance를 생성 하는 방법에는 2가지 방법이 있다.&lt;/p&gt;

&lt;p&gt;하나는, &lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;Google Cloud Web Console&lt;/a&gt;에서 생성하는 방법과 다른 하나는 앞서 설치 한 &lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-SDK-Install&quot;&gt;Cloud SDK&lt;/a&gt;를 이용한 방법이 있다. 그에 앞서 Project의 생성에 대해 먼저 알아 보도록 한다.&lt;/p&gt;

&lt;h2 id=&quot;1-project-생성-optional&quot;&gt;1. Project 생성 (Optional)&lt;/h2&gt;

&lt;p&gt;아래와 같이 Google Cloud Web Console로 접속 한다. 만약, Google Cloud Platform의 계정을 처음 활성화 한 상태라면, &lt;code class=&quot;highlighter-rouge&quot;&gt;My First Project&lt;/code&gt;라는 Project 명이 보일 것이다. Test를 위해 간단히 할 것이라면, 처음 생성된 Project를 이용해도 무방하다. 그렇지 않고 신규로 생성하고 싶은 경우 아래와 같이 신규로 Project를 생성하도록 한다.&lt;/p&gt;

&lt;p&gt;Google Cloud Platform의 구조는 아래와 같은 구조로 이루어져있으며, 개인 사용자의 경우 간단히 Account 아래 여러 Project가 Sub로 붙어 있는 구조이다. 우선 아래 그림 [Fig 1.1]에서 처럼 Project를 Click하면 그림[Fig 1.2]의 프로젝트 생성을 위한 화면을 볼 수 있다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/web-console-0.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 1-1. Google Cloud Console Project 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/web-console-1.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 1-2. Project 생성] &lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;다른 방법으로는 그림 [Fig 2-1]에서 처럼 옆 &amp;lt;img src=”../assets/images/top-menu.png” width=30px height=30px/&amp;gt;를 클릭 해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM 및 관리자&lt;/code&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;리소스 관리&lt;/code&gt; Menu를 클릭 하도록 한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-0.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-1. Menu에서 리소스 관리 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-1.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-2. 리소스 관리에서 Project 만들기 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-2.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-3. Project 생성]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Project 생성 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Project 이름&lt;/code&gt;은 중복이 가능 하나, 아래 작은 글씨로 자동 생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Project ID&lt;/code&gt;는 다른 Google Cloud 내에 다른 Project들과 중복이 되면 안된다. 그리고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Project ID&lt;/code&gt;는 향후 변경 할 수 없으므로, 대규모 Project에서 여러 Project를 연결 할 경우 Naming Rule을 결정 할 필요가 있다. 이는 다음에 자세히 살펴보도록 한다.&lt;/p&gt;

&lt;p&gt;이번에는 Project 생성에 대해 알아 보았다. 전사(Enterprise)의 시각으로 보자면 Project의 생성은 곧 하나의 조직이 될수 있고, 이는 논리적인 하나의 업무 혹은 조직이 될 수 있으며, 조직의 구조는 Cloud에 있는 Landscape의 구조로 볼 수 있을 것이다. 때문에, Project의 구조를 잡는것은 관리적인 측면에서 아주 중요한 부분이 될 수 있을 것이고, 효율적인 IT 운영의 첫걸음이 될 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;아직은 Cloud의 경험이 적어 이런 부분에 대한 포스팅을 하긴 어렵다. 이런 부분은 Project의 경험이 많이 필요하기 때문에, 향후 나중에 포스팅 할 기회가 있으면 해보도록 하려고 한다.&lt;/p&gt;

&lt;p&gt;다음은 본격적으로 Google Cloud Compute Engine의 생성/삭제에 대해 알아보도록 하겠다.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Google-Cloud-Compute-Engine-Usage-2</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Google-Cloud-Compute-Engine-Usage-2</guid>
        
        <category>infrastructure</category>
        
        
      </item>
    
      <item>
        <title>Google Cloud Compute Engine (1) - Project 생성하기</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-Compute-Engine-Usage-1&quot;&gt;Google Cloud Compute Engine (1) - Project 생성하기&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-Compute-Engine-Usage-2/&quot;&gt;Google Cloud Compute Engine (2) - Compute Engine Instance 생성&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이번 Post에서는 Google Cloud의 자원 중 Compute Engine을 사용하는 방법에 대해 알아 보도록 하겠다. &lt;a href=&quot;https://cloud.google.com/compute/&quot;&gt;Google Cloud Compute Engine(GCE)&lt;/a&gt;은 Google Cloud 내에 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B0%80%EC%83%81_%EB%A8%B8%EC%8B%A0#%EA%B0%80%EC%83%81_%EB%A8%B8%EC%8B%A0_%EC%9D%91%EC%9A%A9_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4&quot;&gt;가상 머신(Virtual Machine=VM)&lt;/a&gt;으로 Google Cloud의 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A1%9C%EC%84%9C%EC%9D%98_%EC%9D%B8%ED%94%84%EB%9D%BC%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B2%98&quot;&gt;IaaS(Infrastructure as a Service)&lt;/a&gt;이다. Compute Engine을 이용하면, Google의 Peta byte급의 Network 및 Persistant Disk 등의 자원을 저렴하게 이용할 수 있고, 높은 수준의 &lt;a href=&quot;https://cloud.google.com/compute/sla&quot;&gt;SLA(Service Level Agreement)&lt;/a&gt;를 보장한다.&lt;/p&gt;

&lt;p&gt;Google Cloud의 Compute Engine Instance를 생성 하는 방법에는 2가지 방법이 있다.&lt;/p&gt;

&lt;p&gt;하나는, &lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;Google Cloud Web Console&lt;/a&gt;에서 생성하는 방법과 다른 하나는 앞서 설치 한 &lt;a href=&quot;https://jay-pak.github.io/Google-Cloud-SDK-Install&quot;&gt;Cloud SDK&lt;/a&gt;를 이용한 방법이 있다. 그에 앞서 Project의 생성에 대해 먼저 알아 보도록 한다.&lt;/p&gt;

&lt;h2 id=&quot;project-생성-optional&quot;&gt;Project 생성 (Optional)&lt;/h2&gt;

&lt;p&gt;아래와 같이 Google Cloud Web Console로 접속 한다. 만약, Google Cloud Platform의 계정을 처음 활성화 한 상태라면, &lt;code class=&quot;highlighter-rouge&quot;&gt;My First Project&lt;/code&gt;라는 Project 명이 보일 것이다. Test를 위해 간단히 할 것이라면, 처음 생성된 Project를 이용해도 무방하다. 그렇지 않고 신규로 생성하고 싶은 경우 아래와 같이 신규로 Project를 생성하도록 한다.&lt;/p&gt;

&lt;p&gt;Google Cloud Platform의 구조는 아래와 같은 구조로 이루어져있으며, 개인 사용자의 경우 간단히 Account 아래 여러 Project가 Sub로 붙어 있는 구조이다. 우선 아래 그림 [Fig 1.1]에서 처럼 Project를 Click하면 그림[Fig 1.2]의 프로젝트 생성을 위한 화면을 볼 수 있다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/web-console-0.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 1-1. Google Cloud Console Project 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/web-console-1.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 1-2. Project 생성] &lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;다른 방법으로는 그림 [Fig 2-1]에서 처럼 옆 &amp;lt;img src=”../assets/images/top-menu.png” width=30px height=30px/&amp;gt;를 클릭 해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;IAM 및 관리자&lt;/code&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;리소스 관리&lt;/code&gt; Menu를 클릭 하도록 한다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-0.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-1. Menu에서 리소스 관리 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-1.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-2. 리소스 관리에서 Project 만들기 선택]&lt;/em&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;img src=&quot;../images/google-cloud-project-create/menu-resource-2.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;[Fig 2-3. Project 생성]&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Project 생성 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Project 이름&lt;/code&gt;은 중복이 가능 하나, 아래 작은 글씨로 자동 생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Project ID&lt;/code&gt;는 다른 Google Cloud 내에 다른 Project들과 중복이 되면 안된다. 그리고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Project ID&lt;/code&gt;는 향후 변경 할 수 없으므로, 대규모 Project에서 여러 Project를 연결 할 경우 Naming Rule을 결정 할 필요가 있다. 이는 다음에 자세히 살펴보도록 한다.&lt;/p&gt;

&lt;p&gt;이번에는 Project 생성에 대해 알아 보았다. 전사(Enterprise)의 시각으로 보자면 Project의 생성은 곧 하나의 조직이 될수 있고, 이는 논리적인 하나의 업무 혹은 조직이 될 수 있으며, 조직의 구조는 Cloud에 있는 Landscape의 구조로 볼 수 있을 것이다. 때문에, Project의 구조를 잡는것은 관리적인 측면에서 아주 중요한 부분이 될 수 있을 것이고, 효율적인 IT 운영의 첫걸음이 될 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;아직은 Cloud의 경험이 적어 이런 부분에 대한 포스팅을 하긴 어렵다. 이런 부분은 Project의 경험이 많이 필요하기 때문에, 향후 나중에 포스팅 할 기회가 있으면 해보도록 하려고 한다.&lt;/p&gt;

&lt;p&gt;다음은 본격적으로 Google Cloud Compute Engine의 생성/삭제에 대해 알아보도록 하겠다.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Google-Cloud-Compute-Engine-Usage-1</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Google-Cloud-Compute-Engine-Usage-1</guid>
        
        <category>getting-started</category>
        
        
      </item>
    
      <item>
        <title>Google Cloud SDK Install</title>
        <description>&lt;p&gt;Google Cloud는 Cloud위의 Resource를 관리할 수 있는 2가지 도구를 제공한다. 하나는 &lt;a href=&quot;https://console.cloud.google.com&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cloud Web Console&lt;/code&gt;&lt;/a&gt;이고, 또 다른 하나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;CLI(Command Line Interface : 명령표시줄)&lt;/code&gt;로 관리할 수있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Cloud SDK&lt;/code&gt;가 그것이다. 뿐만아니라 Google은 Cloud 위의 자원을 관리하기 편하도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;RestAPI&lt;/code&gt;를 이용한 도구를 제공하여 자원의 Deploy를 Automation 할 수 있도록 Library를 제공한다. (Java 혹은 PIP, NodeJS etc.). Cloud SDK는 Cloud Resource를 관리 함에 있어 편리하고 빠르게 관리 할 수 있는 방법을 제공한다.&lt;/p&gt;

&lt;p&gt;여기서는 Cloud SDK를 설치하는 방법에 대해 설명한다.&lt;/p&gt;

&lt;h1 id=&quot;1-prerequire&quot;&gt;1. Prerequire&lt;/h1&gt;

&lt;p&gt;Google Cloud SDK는 Python으로 Programing되어 있으며, 모든 Environment에 Python이 설치 되어 있다는 것을 가정한다. 아래 명령으로 Python이 설치 되어 있는가를 확인 하도록 한다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;

python3 &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmRpuiYWzFLS4JQmF9NjiofhNo9VNWhchcijXhJGnmTcRz/1.png&quot; align=&quot;center&quot; /&gt;
    &lt;br /&gt;
	&lt;em&gt;Fig. 1 - Python Version 확인&lt;/em&gt;
&lt;/center&gt;

&lt;h1 id=&quot;2-installation&quot;&gt;2. Installation&lt;/h1&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Google Cloud SDK Installer를 &lt;a href=&quot;https://dl.google.com/dl/cloudsdk/channels/rapid/GoogleCloudSDKInstaller.exe&quot;&gt;Download&lt;/a&gt; 받는다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Installer의 Guide에 따라 설치를 진행한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;명령 Prompt를 실행하여, 아래와 같이 실행하여, 설치 여부를 확인한다.&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gcloud &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;linux--mac-osx&quot;&gt;Linux / Mac OSX&lt;/h3&gt;

&lt;p&gt;Windows와 같이 Download 받아서 진행 할 수 있지만, 여기에서는 curl을 이용하여 Download부터 설치까지 진행 해보도록 한다.&lt;/p&gt;

&lt;p&gt;Terminal을 열어 아래와 같이 명령을 실행 하여 본다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl https://sdk.cloud.google.com | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmdSLYbPNEuEffCiovsnyWSmJRcBJ6KS4V9knijGtxi4N7/2.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;Fig. 2 - Cloud SDK 설치&lt;/em&gt;
&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;설치 진행 후 아래와 같이 Cloud SDK Bug report를 보내겠냐는 내용이 나오는데, Y를 입력 하고, Google Cloud SDK설치를 진행 하도록 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmYVB8tpPY4GCZpaeC75Z3o8BESTCNbCLH3deKxhXN6KQJ/3.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;Fig. 3 - Bug Report 동의 여부&lt;/em&gt;
&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;해당 과정이 지나면, 본격적으로 Google Cloud SDK 설치 및 Update가 진행 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmdFuixQbd8hcQ7XJTNDoADPXvz6RENV5fWTupF2vMGVi9/4.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;Fig. 4 - 설치 진행&lt;/em&gt;
&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;이때 설치 및 Update이후 환경 변수 PATH에 추가 하겠냐는 Prompt가 나오는데 이때 Y를 입력 해서 Path에 추가 해주도록 한다. 그렇지 않으면 Cloud SDK를 실행 할때 마다 Terminal에서 해당 경로로 이동하여, 실행 해야하는 불편함이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmXVyDKgafNnNBXcr7NsdYf8pL6efKSXhbs42D82qog2jD/5.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;Fig. 5 - 환경 변수 추가&lt;/em&gt;
&lt;/center&gt;

&lt;ul&gt;
  &lt;li&gt;이 과정 까지 끝나면 gcloud –version을 입력 하여 제대로 설치 되었음을 확인 한다. 하지만 바로 실행 되지는 않는다. 앞서 말했다시피 Cloud SDK 설치 이후 환경 변수에 등록은 되었으나 바로 실행 되지는 않는다. 바로 실행을 하고 싶다면 아래 와 같이 진행 하면 바로 gcloud 명령을 확인 할수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cdn.steemitimages.com/DQmaZtPkRJVrhFozL1d4o9XqQkVdr3P2SZFHB9ZRDRehh3v/6.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;Fig. 6 - 설치 확인&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;이렇게 Cloud SDK 설치가 완료 되었다. 다음은 Cloud SDK를 사용한 Cloud 자원을 이용하는 방법에 대해 하나하나 해보도록 하겠다.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Google-Cloud-SDK-Install</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Google-Cloud-SDK-Install</guid>
        
        <category>getting-started</category>
        
        
      </item>
    
      <item>
        <title>Big Query ML 사용해 보기 (1)</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;./Big-Query-ML-Use-(1)&quot;&gt;1. Big Query ML 사용해보기 (1) - Understanding Data(Business)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이번 포스트에서는 Binary logistics Regressor를 이용한 Classification Model을 BigQuery ML을 이용하여 만들어 보고자 한다.&lt;/p&gt;

&lt;p&gt;앞서 이야기한대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;BigQuery ML&lt;/code&gt;은 Linear Regression(선형 회귀), Binary logistic regression(이진 로지스틱 회귀)의 모델을 생성 할 수 있다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Linear Regressor&lt;/code&gt;는 수치를 예측 하고자 할 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;Binary logistics regression&lt;/code&gt;은 분류 예측을 하고자 할때 사용한다.&lt;/p&gt;

&lt;p&gt;이번 Post는 &lt;code class=&quot;highlighter-rouge&quot;&gt;BigQuery ML&lt;/code&gt;에 앞서 분석에 필요한 데이터를 탐색하는 것을 포스팅 해보도록 하겠다.&lt;/p&gt;

&lt;h1 id=&quot;데이터-탐색-및-데이터-이해하기-understanding-business&quot;&gt;데이터 탐색 및 데이터 이해하기 (Understanding Business)&lt;/h1&gt;

&lt;p&gt;우선 Machine Learning을 위해서는 데이터에 대한 이해 및 탐색. 그리고, 예측을 위해 필요한 데이터의 특성은 무엇인가에 대한 이해가 선행 되어야 한다. 아래 예제에서 사용하는  &lt;code class=&quot;highlighter-rouge&quot;&gt;data-to-insights.ecommerce.web_analytics&lt;/code&gt; 는 BigQuery ML을 Test 하기 위해 Merchandise Store의 데이터를 공개한 것이다.&lt;/p&gt;

&lt;h2 id=&quot;1-방문자-대비-구매자&quot;&gt;1. 방문자 대비 구매자&lt;/h2&gt;

&lt;p&gt;우선 데이터의 이해를 위해 전체 방문자 대비 구매자의 비율을 구하는 쿼리를 수행 해보도록 한다.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standardSQL&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullVisitorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_visitors&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`data-to-insights.ecommerce.web_analytics`&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;purchasers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullVisitorId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_purchasers&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`data-to-insights.ecommerce.web_analytics`&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transactions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;total_visitors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;total_purchasers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;total_purchasers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_visitors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conversion_rate&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;purchasers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

&lt;/blockquote&gt;

&lt;p&gt;위의 데이터는 전체 방문자 대비 실제 구매자를 구하는 데이터이다. 위의 with절의 visitor는 방문자의 ID를 Count 하는 데이터이고, purchasers는 전체 데이터중 Transaction Flag가 있는 경우를 거래가 이루어진 것으로 보고, Count 한 데이터이다.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;center&gt;
    &lt;img src=&quot;./images/bigquery/Bigquery-ML-1.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;&amp;lt; Fig. 1 - 방문자 대비 실제 구매자 &amp;gt;&lt;/em&gt;
&lt;/center&gt;

&lt;/blockquote&gt;

&lt;p&gt;전체 방문자 수는 741,721명이며(이는 전체 방문 횟수가 아닌 전체 방문자의 수이다.) 이 방문자들 중 실제 구매 한 사람의 수는 20015명이다. 즉 
&lt;script type=&quot;math/tex&quot;&gt;(20,015\div741,721)\times100 = 2.69\%&lt;/script&gt;
2.69%의 방문자가 Login 후 구매를 진행 하는 것을 알 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;2-매출과-수익-탐색&quot;&gt;2. 매출과 수익 탐색&lt;/h2&gt;

&lt;p&gt;앞서 방문자와 실제 구매자를 알아 보았다. 하지만, 이것 만으로는 정보가 충분하지 않다. 방문자가 방문해서 구매를 했다 한들, 어떤 어떤 방문자가 어떤 카테고리의 제품을 찾았고, 어떤 제품을 구매 하였는가에 대한 탐색이 필요하다. 아래의 쿼리를 실행 해보자.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standardSQL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prod_name&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prod_cat_name&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;%'d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units_sold&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unit_sold&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;%'.2f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2ProductName&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prod_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2ProductCategory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prod_cat_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;productQuantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;units_sold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localProductRevenue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`data-to-insights.ecommerce.web_analytics`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;UNNEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;UNNEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;center&gt;
    &lt;img src=&quot;./images/bigquery/Bigquery-ML-2.png&quot; /&gt;
	&lt;br /&gt;
    &lt;em&gt;&amp;lt; Fig. 2 - 매출 상위 5개 제품 &amp;gt;&lt;/em&gt;
&lt;/center&gt;

  &lt;blockquote&gt;
    &lt;p&gt;위 Query는 전체 매출 중 가장 많이 팔린 상품 명과 수량에 대해, 상위 5개를 보여주는 쿼리이다.이때, From 절의 Inline View 쿼리 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;UNNEST(hits)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;UNNEST(h.product)&lt;/code&gt;를 볼 수 있는데, 이는 해당 Table의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Denormalize&lt;/code&gt; 된 테이블의 Reapeat Column을 사용하는 것이고, Target Table의 Dataset의 1개의 Row에 대응되는 Repeat 컬럼에 대해 배열로 나열 하여, 연산 하는데 사용하려는 것이다. 다시 말해 Unnest Keyword는 Denormalize 된 Table의 Row에 대해 하나의 배열 타입으로 바꿔서 하나의 테이블로 인식 하는 역할을 해주는 것이다. 즉, Query 상에서 Table의 Row에 대해 1:N의 형태로 풀어 주는 역할을 한다.&lt;/p&gt;
  &lt;/blockquote&gt;

&lt;/blockquote&gt;

&lt;h2 id=&quot;3-정리&quot;&gt;3. 정리&lt;/h2&gt;

&lt;p&gt;우리는 지금까지 간단하게 나마, Google의 Merchandise Store의 Data를 가지고 방문자와 실제 구매자, 그리고 매출 상위 5개의 제품에 대해 탐색 해보았다. 이것으로 이해 할지는 모르겠지만, 위에서 보는 것 처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터를 이해 하는 것은 Business를 이해&lt;/code&gt; 하는 것과 같다고 볼수 있을 것이다.&lt;/p&gt;

&lt;p&gt;가령, 위의 Dataset으로 방문자가 Site에 접속 하여 구매로 이어 지는 Pattern에 대해 분석을 하고 싶다고 가정을 하자. 접속하여 구매까지 이어지는 Pattern을 알기 위해서는 우선 사용자가 접속하는 경로부터 시작 해서 사용자가 검색한 검색어와 검색해서 나온 결과를 가지고 클릭한 제품의 종류, 그리고 제품을 구매하는데 제품에 대한 설명이 명시된 Page에 머문 시간 등, 여러 Factor를 가지고 고객의 구매 Pattern을 분석을 할 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;하지만, 지금까지의 과정은 과거의 방문자수, 실제 구매자, 매출을 간단히 알아 본것에 불과 하며, 이를 분석 하기 위해서는 더 많은 데이터를 탐색 해야 하며, 실제 인입(Data Ingestion)된 데이터를 단계별로 분석 할 필요가 있고, 이는 반복적이고 많은 데이터를 필요로 할 것이다.&lt;/p&gt;

&lt;p&gt;Bigquery는 많은 데이터를 쌓기 좋은 대안이 될 것이고, 그 안에서 BigQuery ML은 데이터를 분석하기 위한 반복적인 작업을 획기적으로 줄여 줄것으로 기대 된다.&lt;/p&gt;

&lt;p&gt;다음은 BigQuery ML을 이용하여, 기존 단면적으로 보이는 데이터를 어떻게 통합하고, Machine Learning모델을 만드는지를 포스팅 해보도록 하겠다.&lt;/p&gt;

</description>
        <pubDate>Thu, 06 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Big-Query-ML-Use-(1)</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Big-Query-ML-Use-(1)</guid>
        
        <category>bigquery</category>
        
        
      </item>
    
      <item>
        <title>Bigquery ML - BigQuery에서 Machine Learning을..</title>
        <description>&lt;center&gt;
    &lt;img src=&quot;https://lh3.googleusercontent.com/-yYQHr3BnoKU/WvsR07QaYiI/AAAAAAAABgA/V2WfyrpctnInmJb-9B9E-MuMQ7ehPdzkgCJoC/w530-h298-n-rw/NEXT_2018_COLOR_TWITTER%2B%25284%2529.gif&quot; /&gt;
    &lt;br /&gt;
	&lt;em&gt;Google Next&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;BigQuery ML은 말 그대로 Big Query 내에서 Machine Learning Model을 생성 할 수 있는 서비스이다. 기업의 데이터 분석가들은 데이터를 활용한 분석 및 예측을 위해서는 R, Python 등 언어를 습득해야 하고, 데이터에 대한 이해도가 높은 사람만이 할 수 있어, 소수 인원의 전유물 처럼 여겨 졌다.&lt;/p&gt;

&lt;p&gt;이에 Google은 개발 언어를 배우지 않고도, 쉽게 Machine Learning Model을 생성 할 수 있도록 SQL만으로 데이터를 분석 할수 있는 Platform인 BigQuery에 Machine Learning Model을 생성 할 수 있도록 서비스하기 시작하였다. 이와는 별도로, Cloud Auto ML을 발표 하였는데, Cloud AutoML은 인식 시스템의 기계 학습 / AI를 사용한 사용자 정의 기계 학습 모델 구축을 On-Premise에서 실행할 수 있도록하고있다. Cloud AutoML은 이미지 내의 물체 인식 / 분류뿐만 아니라 문서의 분류, 번역에 대응 했다.&lt;/p&gt;

&lt;p&gt;아래는 BigQuery ML의 Model 생성 및 이를 이용한 예측을 하는 방법을 간단히 설명하는 Image이다.&lt;/p&gt;

&lt;center&gt;
    &lt;img src=&quot;https://cloud.google.com/images/products/bigquery/bigquery-ml.gif&quot; /&gt;
    &lt;br /&gt;
	&lt;em&gt;[ 출처 : Google Cloud Big Query ML Documentation ]&lt;/em&gt;
&lt;/center&gt;

&lt;h3 id=&quot;1-create-support-model&quot;&gt;1. Create Support Model&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Linear Regression - 연속성을 가지는 수치 데이터에 대해 예측을 위한 모델.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Binary Logistics Regression - 쉽게 말해 Classification. A인가? B인가? 혹은 어느 군집에 속하는가를 판별 하는 모델.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-quota-및-limitation--pricing&quot;&gt;2. Quota 및 Limitation &amp;amp; Pricing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;BigQuery ML은 Machine Learning을 위한 Model을 생성하는데 쓰이는 Query에 대한 Quota를 따른다. Create Model에 대한 Quota는 없다. 자세한 내용은 &lt;a href=&quot;https://cloud.google.com/bigquery/quotas&quot;&gt;Big Query Quotas and Limits&lt;/a&gt;에서 확인 바란다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-사용-가능-환경&quot;&gt;3. 사용 가능 환경&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;BigQuery UI&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bq CLI Tool&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Big Query Rest API&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jupyter Notebook 또는 BI Platform과 같은 외부 플랫폼&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음 포스팅은 Big Query ML을 간단히 사용해보는 포스팅을 해보고자 한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//Google-Cloud-Democratization-of-Machine-Learning-Bigquery-ML</link>
        <guid isPermaLink="true">https://jay-pak.github.io//Google-Cloud-Democratization-of-Machine-Learning-Bigquery-ML</guid>
        
        <category>bigquery</category>
        
        
      </item>
    
      <item>
        <title>Big Query ML 뜯어보기</title>
        <description>&lt;p&gt;이번 포스트는 Big Query ML을 뜯어 보고자 한다.&lt;/p&gt;

&lt;p&gt;Bigquery ML을 위해서는 아래와 같이 2가지 Step을 거친다.&lt;/p&gt;

&lt;h2 id=&quot;1-model-creation-모델-생성&quot;&gt;1. Model Creation (모델 생성)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Bigquery ML의 모델을 생성 하는 것은 익히 알고 있는 Create 구문과 비슷하며, Model 생성에 필요한 Option Parameter는 {Key = Value}의 형태로 사용하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODEL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODEL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODEL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model_name&lt;/span&gt;       
&lt;span class=&quot;k&quot;&gt;OPTIONS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQL_Statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Options&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;NAME&lt;/th&gt;
      &lt;th&gt;VALUE&lt;/th&gt;
      &lt;th&gt;Details&lt;/th&gt;
      &lt;th&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;model_type&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;linear_reg&lt;br /&gt;logistic_reg&lt;/td&gt;
      &lt;td&gt;‘linear_reg’는 &lt;a href=&quot;https://developers.google.com/machine-learning/glossary/#linear_regression&quot;&gt;linear regression&lt;/a&gt; model을 생성하는데 사용하는 Option이고, ‘logistic_reg’ &lt;a href=&quot;https://developers.google.com/machine-learning/glossary/#logistic_regression&quot;&gt;logistic regression&lt;/a&gt; model을 생성하는데 사용한다.해당 Option은 필수로 입력 해야 한다.&lt;/td&gt;
      &lt;td&gt;model_type=‘linear_reg’&lt;br /&gt;model_type=‘logistic_reg’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;input_label_cols&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;STRING&lt;/td&gt;
      &lt;td&gt;학습에 이용되는 Label 컬럼의 이름을 배열로 열거 한다. 배열이라 해도 하나의 컬럼일 경우 하나의 Label 컬럼을 명시 할 수 있다. 만약, 이 Option이 지정되지 않은 경우 Query 하는 Dataset 컬럼 명 중, “label”이라는 이름이 된 컬럼의 경우 이것을 하나의 input_label로 인식한다. 그 마저 없다면, 모델 생성은 실패한다. Linear Regression 모델의 Label column은 실제 수치 Measure 값(숫자값)으로 하고, Logistics Regression의 경우 Cardinality가 낮은 컬럼을 대상으로 설정 하도록 한다.&lt;/td&gt;
      &lt;td&gt;inupt_label_cols=[‘col1’,’col2’]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;l1_reg&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;FLOAT64&lt;/td&gt;
      &lt;td&gt;Model의 L1 정규화를 진행. 여기서 말하는 정규화는 Model의 가중치를  조절 하여, 모델 접합성을 향상 시킨다. 기본값은 &lt;strong&gt;0&lt;/strong&gt;.&lt;/td&gt;
      &lt;td&gt;l1_reg=0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;l2_reg&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;FLOAT64&lt;/td&gt;
      &lt;td&gt;Model의 L2 정규화를 진행. 여기서 말하는 정규화는 Model의 가중치를  조절 하여, 모델 접합성을 향상 시킨다. 기본값은 &lt;strong&gt;0&lt;/strong&gt;.&lt;/td&gt;
      &lt;td&gt;l2_reg=0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;max_iterations&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;INT64&lt;/td&gt;
      &lt;td&gt;최대 반복 학습 횟수 기본값은 &lt;strong&gt;20&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;max_iterations=20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;learn_rate_strategy&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;line_search&lt;br /&gt;constant&lt;/td&gt;
      &lt;td&gt;Training 동안 특정 Learning rate(학습률)를 선정함에 있어, 전략을 선택한다. 2가지 Option을 선택할 수 있다. 기본 값은 ‘line_search’line_search Option은 학습 속도를 늦추고 처리되는 바이트 수를 늘리지 만, 지정된 초기 학습 속도가 더 높더라도 일반적으로 수렴된다는 점에서 트레이드 오프가 될 수 있다. 이 때 learn_rate_stretegy Option에 대해 설정 하지 않거나 line_search일 경우, is_init_learn_rate값을 통해 ml.learn_info에 나타나는 learn_rate의 값을 두배로 설정 하길 Recommand 한다. 최적의 초기 learning rate는 모델 마다 다르므로, 이점을 확일 할 필요가 있다.&lt;/td&gt;
      &lt;td&gt;learn_rate_strategy=‘line_search’&lt;br /&gt;learn_rate_strategy=‘constant’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;learn_rate&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;FLOAT64&lt;/td&gt;
      &lt;td&gt;learn_rate_strategy Option이 &lt;strong&gt;constant&lt;/strong&gt;일 경우 경사 하강법(&lt;a href=&quot;https://developers.google.com/machine-learning/glossary/#gradient_descent&quot;&gt;gradient descent&lt;/a&gt;)의 learning rate를 설정 한다. 만약, learn_rate_strategy의 Option이 &lt;strong&gt;line_search&lt;/strong&gt;일 경우 오류를 return 한다. 기본 값은 &lt;strong&gt;0.1&lt;/strong&gt;이다. learn_rate_strategy가 ‘constant’일 경우 에만 사용하는 Option이다.&lt;/td&gt;
      &lt;td&gt;learn_rate=0.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;early_stop&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;BOOL&lt;/td&gt;
      &lt;td&gt;relative loss improvement(상대적 손실 개선)이 min_rel_progress 미만인 첫 번째 반복 이후에 학습이 중지되어야 함을 나타낸다. 기본값은 &lt;strong&gt;ture&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;early_stop=ture&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;min_rel_progress&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;FLOAT64&lt;/td&gt;
      &lt;td&gt;The minimum relative loss improvement necessary to continue training when early_stop is set to true. For example, a value of 0.01 specifies that each iteration must reduce the loss by 1% for training to continue. The default value is 0.01.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;data_split_method&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;auto_split&lt;br /&gt;random&lt;br /&gt;custom&lt;br /&gt;seq&lt;br /&gt;no_split&lt;/td&gt;
      &lt;td&gt;입력 데이터에 대해 Training과 Evaluation dataset을 나누는 방법에 대해 나타낸다. 여기서 Training data는 Model을 학습(training)시키는 데이터를 나타내고, Evaluation Data set은 training 이 후 early stop 시 &lt;a href=&quot;https://developers.google.com/machine-learning/glossary/#overfitting&quot;&gt;overfitting&lt;/a&gt;을 피하기 위해 Training Model의 검증의 용도로 사용된다. 기본값은 auto_split이다. &lt;strong&gt;auto_split&lt;/strong&gt; : Training data와 Evaluation data를 자동으로 분할 해주는 Option이다. &lt;strong&gt;random&lt;/strong&gt; : 말 그대로 Dataset을 임의적으로 나눈다. (다른 Training을 실시 하면, 서로 다른 Split 결과가 나타난다.)&lt;strong&gt;custom&lt;/strong&gt; : BOOL이란 이름으로 사용자가 컬럼을 만들어 Training Data와 Evaluation Data를 분할 한다. 여기서 컬럼의 값이 ‘true’일 경우 evaluation data로 사용하고 ‘false’일 경우 training data로 사용 한다. &lt;strong&gt;seq&lt;/strong&gt; : 사용자가 제공한 Column을 순차적으로 나눈다. 이때 순차적으로 사용 할 수 있는 Column은 NUMERIC, STRING, TIMESTAMP이다. 나머지 Row는(Null을 포함한 모든 값)은 Evaluation data로 활용된다. &lt;strong&gt;no_split&lt;/strong&gt; : 모든 데이터를 Training data 로 사용한다. 만약, data_split_method Option을 명시 하지 않으면, 해당 Option은 auto_split으로 수행되며 auto_split은 아래와 같은 순서로 진행 된다.      1. 입력 데이터가 500개 이하라면, 모든 데이터를 Training Data로 활용 한다.      2. 입력 데이터가 500개에서 50000개 사이면 20%의 비율을 Evaluation Data로 활용한다.      3. 50000개 이상의 입력 Data의 경우 무작위로 10000개의 데이터를 나누어 Evaluation Data로 사용 된다.&lt;/td&gt;
      &lt;td&gt;data_split_method=‘auto_split’&lt;br /&gt;ordata_split_method=‘random’&lt;br /&gt;ordata_split_method=‘custom’&lt;br /&gt;ordata_split_method=‘seq’&lt;br /&gt;ordata_split_method=‘no_split’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;data_split_eval_fraction&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;FLOAT64&lt;/td&gt;
      &lt;td&gt;이 옵션은 data_split_method Option이 ‘random’, ‘seq’ Option일 경우 사용한다. 이 Option은 평가에 사용된 데이터에 대한 소수점 값으로 해당 값은 평가에 대한 기준점역할을 한다. 기본값은 &lt;strong&gt;0.2&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;data_split_eval_fraction=0.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;data_split_col&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;STRING&lt;/td&gt;
      &lt;td&gt;데이터를 나누는데 기준이되는 Column을 명시하며, 선택된 컬럼은 자동으로 feature Column에서 제외 된다.  data_split_method option이 ‘custom’일 경우 해당 Option에 명시되는 Column의 타입은 Boolean이여야 한다. 이 때, Row에 해당 Column이 true나 Null값이 있을 경우, 해당 컬럼은 Evaluation Data로 사용 되고, 나머지 false인 값은 Training데이터로 사용된다. data_split_method option이 ‘seq’일 경우 해당 Column의 마지막 data_split_fraction Row (최소값에서 최대값까지)이 평가 데이터로 사용된다. 첫번째 Row는 training data로 사용된다.&lt;/td&gt;
      &lt;td&gt;data_split_col=‘col1’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;ls_init_learn_rate&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;DOUBLE&lt;/td&gt;
      &lt;td&gt;learn_rate_strategy=‘line_search’일경우 사용하며, 이 Option은 line_rate_strategy=‘line_search’일 경우만 사용 할 수 있다.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;warm_start&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;BOOL&lt;/td&gt;
      &lt;td&gt;이 Option은 새로운 Training Data와 새로운 모델의 옵션, 혹은 둘다 사용 하는데 이용된다. 명시 적으로 재 정의되지 않으면 모델을 학습하는 데 사용 된 초기 옵션이 Warm start 실행에 사용됩니다. 기본값은 &lt;strong&gt;false&lt;/strong&gt;.Warm start 실행에서는 반복 횟수가 0에서 시작하도록 재 설정된다. training_run No. 또는 TIMESTAMP 열은 Warm start 실행을 원래 실행과 구별하는 데 사용될 수 있다. model_type과 label Option, 그리고 Training Data의 Schema의 변경은 Warm start에서 변경 할 수 없다.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;2-prediction-예측&quot;&gt;2. Prediction (예측)&lt;/h2&gt;

&lt;p&gt;Prediction은 ML.PREDICT를 이용하여 예측결과를 도출 한다. 사용법은 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StandardSQL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predictive_label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;예측&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Label&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  	&lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;col2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PREDICT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODEL&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[MODEL_NAME]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQL_Statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음 포스트는 실제로 사용하기 위한 예제를 포스팅 해보도록 하겠다.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Sep 2018 00:00:00 +0900</pubDate>
        <link>https://jay-pak.github.io//BigQuery-ML-Training-1</link>
        <guid isPermaLink="true">https://jay-pak.github.io//BigQuery-ML-Training-1</guid>
        
        <category>bigquery</category>
        
        
      </item>
    
  </channel>
</rss>
